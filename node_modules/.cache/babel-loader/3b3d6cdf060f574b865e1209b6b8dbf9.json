{"ast":null,"code":"import _objectSpread from \"/Users/junaidahmad/Documents/Web Develoment /keeper-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/junaidahmad/Documents/Web Develoment /keeper-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/junaidahmad/Documents/Web Develoment /keeper-app/src/components/createArea.js\";\nimport React, { useState } from 'react'; // JS\n// const input = document.getElementById('myText');\n// const inputValue = input.value\n// React\n// value, onChange\n// dynamic object keys\n\nconst ControlledInputs = () => {\n  const _useState = useState({\n    title: '',\n    content: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        people = _useState4[0],\n        setPeople = _useState4[1];\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (data.title && data.content) {\n      const person = _objectSpread(_objectSpread({}, data), {}, {\n        id: new Date().getTime().toString()\n      });\n\n      console.log(person);\n      setPeople(people => {\n        return [...people, person];\n      });\n      setData({});\n    } else {\n      console.log('empty values');\n    }\n  };\n\n  const removeData = id => {\n    return setPeople(people.filter(person => person.id !== id));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \" form note\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Title : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    value: data.title,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }\n  }, \"Content: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    id: \"content\",\n    name: \"content\",\n    value: data.content,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Submit\")), people.map((person, index) => {\n    const id = person.id,\n          title = person.title,\n          content = person.content;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, content), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      onClick: () => removeData(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Remove\"));\n  })));\n};\n\nexport default ControlledInputs;","map":{"version":3,"sources":["/Users/junaidahmad/Documents/Web Develoment /keeper-app/src/components/createArea.js"],"names":["React","useState","ControlledInputs","title","content","data","setData","people","setPeople","handleChange","e","name","target","value","handleSubmit","preventDefault","person","id","Date","getTime","toString","console","log","removeData","filter","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// JS\n// const input = document.getElementById('myText');\n// const inputValue = input.value\n// React\n// value, onChange\n// dynamic object keys\n\nconst ControlledInputs = () => {\n  const [data, setData] = useState({title:'',content:''});\n \n  const [people, setPeople] = useState([]);\n  const handleChange = (e) => {\n    \n    const name = e.target.name\n    const value = e.target.value\n    setData({ ...data, [name]: value })\n\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n   \n    if (data.title && data.content) {\n      const person = {...data, id: new Date().getTime().toString()};\n      console.log(person);\n      setPeople((people) => {\n        return [...people, person];\n      });\n      setData({});\n      \n    } else {\n      console.log('empty values');\n    }\n    \n  };\n  const removeData = (id) => {\n    return setPeople(people.filter((person) => person.id !== id));\n  }\n  return (\n    <>\n      <article>\n          <form className=' form note' onSubmit={handleSubmit}>\n                  <div className=''>\n                      <label htmlFor='title'>Title : </label>\n                  <input\n              type='text'\n              id='title'\n              name='title'\n              value={data.title}\n             onChange={handleChange}/>\n         \n        </div>\n                  <div className=''>\n                 <label htmlFor='content'>Content: </label>\n            <textarea\n              type='text'\n              id='content'\n              name='content'\n              value={data.content}\n                          onChange={handleChange} />\n                      </div>\n    <button type='submit' className='btn' >Submit</button>\n      </form>\n \n        {people.map((person, index) => {\n          const { id, title, content} = person;\n          return (\n            <div className='note' key={id}>\n              <h1>{title}</h1>\n              <p>{content}</p>\n              <button type='submit' className='btn'\n              onClick={()=>removeData(id)}\n              \n              >Remove</button>\n            </div>\n          );\n        })}\n      </article>\n    </>\n  );\n};\n\nexport default ControlledInputs;\n"]},"metadata":{},"sourceType":"module"}